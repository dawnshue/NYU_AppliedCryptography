104 =======================================
Generating a random 7-bit integer:
Bit 1. x = 1 (least significant bit is always 1, 1*2^0=1)
Random number 1 generated: 1840692184
Bit 2. Least significant bit of 1840692184 is 0
x = 1 + 0*2^1 = 1 + 0
x = 1
Random number 2 generated: 1887925839
Bit 3. Least significant bit of 1887925839 is 1
x = 1 + 1*2^2 = 1 + 4
x = 5
Random number 3 generated: 1701789330
Bit 4. Least significant bit of 1701789330 is 0
x = 5 + 0*2^3 = 5 + 0
x = 5
Random number 4 generated: 723976659
Bit 5. Least significant bit of 723976659 is 1
x = 5 + 1*2^4 = 5 + 16
x = 21
Random number 5 generated: 777261638
Bit 6. Least significant bit of 777261638 is 0
x = 21 + 0*2^5 = 21 + 0
x = 21
Bit 7. Most significant bit of random number is always 1.
x = 21 + 64
x = 85
Random 7-number x = 85
119 =======================================
Generating primality check trace of non-prime number:
Initial p is not prime.
Testing if 85 is prime:
Test 1. (a = 75) fails primality test for n = 85
Performing fast exponentiation: y = 75^(85-1) mod(85)
Binary representation of (n-1) is 1010100
1. Initial y = a = 75
2. y = 75^2 mod(85) = 15
3. y = 15^2 mod(85) = 55
3. bit was 1: y = 55*75 mod(85) = 45
4. y = 45^2 mod(85) = 70
5. y = 70^2 mod(85) = 55
5. bit was 1: y = 55*75 mod(85) = 45
6. y = 45^2 mod(85) = 70
7. y = 70^2 mod(85) = 55
FAILED: Final y = a^(n-1)mod(n) = 55 != 1
123 =======================================
Generating primality check trace of [probably] prime: 107
Testing if 107 is prime:
Test 1. (a = 22) passes primality test for n = 107
Test 2. (a = 29) passes primality test for n = 107
Test 3. (a = 88) passes primality test for n = 107
Test 4. (a = 78) passes primality test for n = 107
Test 5. (a = 54) passes primality test for n = 107
Test 6. (a = 91) passes primality test for n = 107
Test 7. (a = 104) passes primality test for n = 107
Test 8. (a = 60) passes primality test for n = 107
Test 9. (a = 67) passes primality test for n = 107
Test 10. (a = 16) passes primality test for n = 107
Test 11. (a = 81) passes primality test for n = 107
Test 12. (a = 95) passes primality test for n = 107
Test 13. (a = 17) passes primality test for n = 107
Test 14. (a = 5) passes primality test for n = 107
Test 15. (a = 4) passes primality test for n = 107
Test 16. (a = 48) passes primality test for n = 107
Test 17. (a = 44) passes primality test for n = 107
Test 18. (a = 86) passes primality test for n = 107
Test 19. (a = 7) passes primality test for n = 107
Test 20. (a = 76) passes primality test for n = 107
Trace of (a = 76) which passed primality test:
Performing fast exponentiation: y = 76^(107-1) mod(107)
Binary representation of (n-1) is 1101010
1. Initial y = a = 76
2. y = 76^2 mod(107) = 105
2. bit was 1: y = 105*76 mod(107) = 62
3. y = 62^2 mod(107) = 99
4. y = 99^2 mod(107) = 64
4. bit was 1: y = 64*76 mod(107) = 49
5. y = 49^2 mod(107) = 47
6. y = 47^2 mod(107) = 69
6. bit was 1: y = 69*76 mod(107) = 1
7. y = 1^2 mod(107) = 1
PASSED: Final y = a^(n-1)mod(n) = 1 != 1
20 tests passed primality test for n = 107
107 is probably prime
-> final p = 107
-> final q = 71
142 =======================================
(p - 1)*(q - 1) = 7420
Trying e = 3
7420 = 2473*3 + 1
Last remainder = 1
3 and 7420 are relatively prime.
Final e = 3 is co-prime with phi(n) = (p-1)*(q-1)
152 =======================================
Generating multiplicative inverse of 3
t = 0 - 1*2473 mod(7420) = -2473
t = -2473 mod(7420) = 4947
private key d = t = 4947
156 =======================================
p = 107 (00000000000000000000000001101011)
q = 71 (00000000000000000000000001000111)
n = 7597 (00000000000000000001110110101101)
e = 3 (00000000000000000000000000000011)
d = 4947 (00000000000000000001001101010011)
185 =======================================
r = 0000000001000001011011000110100101100011011001010000000000000000000111011010110100000000000000000000000000000011 (binary)
h(r) = 11110001
s = 00000000000000000000011101010100
187 =======================================
h(r) = 241
s = 1876
206 =======================================
k = 20
u = 3950
208 =======================================
u = 00000000000000000000111101101110
215 =======================================
h(u) = 97 (01100001)
v = 804 (00000000000000000000001100100100)
E(e,v) = 97 (01100001)
219 =======================================
Trace for encryption of 804 (E(3,804))
Fast exponentiation to solve: y = c^d mod(n) = 804^3 mod(7597)
d to binary: 3 -> 11
Bit 1. Initial y = 804
Bit 2. y = 804^2 mod(7597)
Bit 2. y = 671
Bit 2. y = (671*804) mod(7597)
Bit 2. y = 97
Final y = 97

